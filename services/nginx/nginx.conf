user nginx;
worker_processes    1;

error_log   /var/log/nginx.log warn;
pid         /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include     /etc/nginx/mime.types;
    default_type    application/octet-stream;

    log_format  main    '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log   main;

    sendfile        on;
    keepalive_timeout   65;

    include /etc/nginx/conf.d/*.conf;
    #needed to proxy websockets
    map $http_upgrade $connection_upgrade {
      default upgrade;
      '' close;
    }
    # defining the upstream to use on the location
#     upstream websocket {
#       server chat-service:3005;
#       server tournament:3007;
#    }

    server {
        listen      1234;
        server_name transcendance;

        location / {
            proxy_pass http://node-app:3000/;
        }

        location /service1/ {
            proxy_pass http://auth-service:3002/;
        }
        # here is a protected route
        location /service2/friends {
            auth_request    /service1/verify;
            auth_request_set $auth_username $upstream_http_auth_username;
            auth_request_set $auth_userid $upstream_http_auth_userid;
			proxy_set_header x_username $auth_username;
			proxy_set_header x_userid $auth_userid;

            proxy_pass http://data-service:3001/friends;
        }

        location /service2/ {
            proxy_pass http://data-service:3001/;            
        }
        # here is another protected route, x_username and x_userid are set based on the jwt verified
        location /protected/ {
            auth_request    /service1/verify;
            auth_request_set $auth_username $upstream_http_auth_username;
            auth_request_set $auth_userid $upstream_http_auth_userid;
			proxy_set_header x_username $auth_username;
			proxy_set_header x_userid $auth_userid;

            proxy_pass http://auth-service:3002/healthcheck;
        }

        location /ws {
            proxy_pass http://chat-service:3005;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;

            # Set timeouts to handle long-lived connections
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
        }

        location /wstournament {
            proxy_pass http://tournament:3007;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;

            # Set timeouts to handle long-lived connections
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
        }

    }
}
